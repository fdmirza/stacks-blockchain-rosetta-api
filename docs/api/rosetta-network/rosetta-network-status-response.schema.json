{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "rosetta-network-status.schema.json",
  "type": "object",
  "title": "RosettaNetworkStatusResponse",
  "description": "NetworkStatusResponse contains basic information about the node's view of a blockchain network. It is assumed that any BlockIdentifier.Index less than or equal to CurrentBlockIdentifier.Index can be queried. If a Rosetta implementation prunes historical state, it should populate the optional oldest_block_identifier field with the oldest block available to query. If this is not populated, it is assumed that the genesis_block_identifier is the oldest queryable block. If a Rosetta implementation performs some pre-sync before it is possible to query blocks, sync_status should be populated so that clients can still monitor healthiness. Without this field, it may appear that the implementation is stuck syncing and needs to be terminated.",
  "required": [
    "current_block_identifier",
    "current_block_timestamp",
    "genesis_block_identifier",
    "peers"
  ],
  "properties": {
    "current_block_identifier": {
      "$ref": "./../../entities/rosetta-block/rosetta-block-identifier.schema.json"
    },
    "current_block_timestamp": {
      "type": "integer",
      "description": "The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second."
    },
    "genesis_block_identifier": {
      "$ref": "./../../entities/rosetta-block/rosetta-genesis-block-identifier.schema.json"
    },
    "oldest_block_identifier": {
      "$ref": "./../../entities/rosetta-block/rosetta-oldest-block-identifier.schema.json"
    },
    "sync_status": {
      "$ref": "./../../entities/network/rosetta-sync-status.schema.json"
    },
    "peers": {
      "type": "array",
      "description": "Peers information",
      "items": {
        "$ref": "./../../entities/network/rosetta-network-peers.schema.json"
      }
    }
  },
  "additionalProperties": true
}
